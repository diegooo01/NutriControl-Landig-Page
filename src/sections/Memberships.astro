---

---
<section class="memberships-section" id="memberships">
    <div class="memberships-text">
        <h1 class="typing-title-3">Membresías.</h1>
        <p>
            Lleva tus cultivos al siguiente nivel. Con nuestras membresías, accede a herramientas exclusivas, soporte personalizado y beneficios que impulsan tu producción desde el primer día.        </p>
    </div>
    <div class="memberships-content">
        <div class="membership">
            <h4>Básica</h4>
            <h1>FREE</h1>
            <p>c/mes</p>
            <a href="#">Seleccionar</a>
            <div class="separate"></div>
            <ul>
                <li>Campos Agrícolas limitados</li>
                <li>Gestión limitada</li>
                <li>Recomendaciones continuas</li>
            </ul>
        </div>
        <div class="membership">
            <h4>Estándar</h4>
            <h1>$4.99</h1>
            <p>c/mes</p>
            <a href="#">Seleccionar</a>
            <div class="separate"></div>
            <ul>
                <li>Campos Agrícolas ilimitados</li>
                <li>Gestión ilimitada</li>
                <li>Recomendaciones continuas</li>
                <li>Registro histórico</li>
            </ul>
        </div>
        <div class="membership">
            <h4>Premium</h4>
            <h1>$9.99</h1>
            <p>c/mes</p>
            <a href="#">Seleccionar</a>
            <div class="separate"></div>
            <ul>
                <li>Campos Agrícolas ilimitados</li>
                <li>Gestión ilimitada</li>
                <li>Recomendaciones continuas</li>
                <li>Registro histórico</li>
                <li>Análisis Predictivo</li>
            </ul>
        </div>
    </div>
</section>
<script>
    const memberships = document.querySelectorAll(".membership");

    const membershipObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry, index) => {
            if (entry.isIntersecting) {
                setTimeout(() => {
                    entry.target.classList.add("show");
                }, index * 300); // 300ms entre cada tarjeta
                membershipObserver.unobserve(entry.target);
            }
        });
    }, {
        threshold: 0.3
    });

    memberships.forEach(m => membershipObserver.observe(m));

    document.addEventListener("DOMContentLoaded", () => {
        const typingTitles = document.querySelectorAll('.typing-title-3');
        const animatedElements = document.querySelectorAll('.animate-fade, .animate-up');

        // Mostrar elementos animados en orden según su posición
        const animatedObserver = new IntersectionObserver((entries) => {
            entries.forEach((entry, index) => {
                if (entry.isIntersecting) {
                    setTimeout(() => {
                        entry.target.classList.add('show');
                    }, index * 400); // Escalonado
                    animatedObserver.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.4
        });

        animatedElements.forEach(el => animatedObserver.observe(el));

        // Animación typing para títulos
        typingTitles.forEach(title => {
            const typingObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting && !title.classList.contains('animate')) {
                        title.classList.add('animate');
                        observer.unobserve(entry.target);
                    }
                });
            }, {
                threshold: 0.5
            });
            typingObserver.observe(title);
        });
    });

    document.addEventListener("DOMContentLoaded", () => {
        const typingTitle = document.querySelector('.typing-title-3');
        const items = document.querySelectorAll(".feature-item, .our-proposal-image");

        // Configura el Intersection Observer para la animación de los elementos generales
        const generalObserver = new IntersectionObserver((entries) => {
            entries.forEach((entry, index) => {
                if (entry.isIntersecting) {
                    setTimeout(() => {
                        entry.target.classList.add("show");
                    }, index * 250);
                    generalObserver.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.1
        });

        items.forEach(item => generalObserver.observe(item));

        // Configura el Intersection Observer para el título de escritura
        const typingObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    // Solo añade la clase si aún no tiene la animación
                    if (!typingTitle.classList.contains('animate')) {
                        typingTitle.classList.add('animate');
                    }
                    observer.disconnect(); // Detén la observación después de que la animación se activa
                }
            });
        }, {
            threshold: 0.5
        });

        typingObserver.observe(typingTitle);
    });


</script>
<style>

    h3{
        color: #014728;
    }

    h1{
        color: #014728;
        font-size: 40px;
    }
    h2{
        font-size: 24px;
    }
    p{
        font-size: 20px;
    }

    .typing-title-3 {
        overflow: hidden;
    }

    @media (min-width: 560px) {
        .typing-title-3.animate {
            animation: typing-3 1.5s steps(16, end) forwards, blink 0.45s step-end infinite;
            white-space: nowrap;
            border-right: 3px solid #014728;
        }
    }

    @keyframes typing-3 {
        from { width: 0ch; }
        to { width: 11ch; }
    }

    @keyframes blink {
        50% { border-color: transparent; }
    }

    @media screen and (max-width: 300px) {
        .memberships-text h1 {
            font-size: 24px!important;
        }
        p {
            font-size: 14px!important;
        }
    }

    .memberships-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        scroll-margin-top: 40px;
    }

    .memberships-text{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        max-width: 1300px;
        text-align: center;
        padding: 60px 80px 60px 80px;
    }
    .memberships-text p{
        width: 80%;
    }

    
    .memberships-content {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 100px;
        padding: 40px;
        padding-bottom: 60px;
    }

    .membership {
        background-color: white;
        border: 2px solid #014728;
        border-radius: 16px;
        color: #014728;
        padding: 30px 20px;
        width: 300px;
        box-sizing: border-box;
        text-align: center;
        transition: transform 0.3s ease;
        cursor: pointer;
    }

    .membership {
        opacity: 0;
        transform: translateY(30px);
        transition: opacity 0.6s ease, transform 0.6s ease;
    }

    .membership.show {
        opacity: 1;
        transform: translateY(0);
    }


    .membership:hover {
        transform: translateY(-10px);
    }

    .membership h4 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .membership h1 {
        font-size: 50px;
        margin: 10px 0;
    }

    .membership p {
        font-size: 20px;
        margin-bottom: 20px;
    }

    .membership ul {
        list-style: none;
        padding: 0;
        font-size: 16px;
        margin-top: 20px;
        text-align: left;
    }

    .membership ul li {
        margin-bottom: 8px;
        text-align: center;
    }

    .membership a {
        display: inline-block;
        background-color: #014728;
        color: white;
        padding: 10px 20px;
        text-decoration: none;
        font-weight: bold;
        border-radius: 8px;
        transition: background-color 0.3s ease, color 0.3s ease;
        border: 1px solid #014728;
    }

    .membership a:hover {
        background-color: #fff;
        color: #014728;
    }

    .membership .separate {
        height: 2px;
        background-color: #014728;
        margin: 20px 0;
        border-radius: 10px;
    }

    /* Membership del medio */
    .membership:nth-child(2) {
        background-color: #014728;
        color: white;
    }

    .membership:nth-child(2) h1{
        color: white;
    }

    .membership:nth-child(2) .separate {
        background-color: white;
    }

    .membership:nth-child(2) a {
        background-color: white;
        color: #014728;
        transition: background-color 0.3s ease, color 0.3s ease;
        border: 1px solid white;
    }

    .membership:nth-child(2) a:hover {
        background-color: #014728;
        color: #fff;
    }

    /* Responsive */
    @media (max-width: 1200px) {
        .memberships-content {
            gap: 70px;
        }
    }

    @media (max-width: 992px) {
        .memberships-content {
            gap: 50px;
        }
    }

    @media (max-width: 768px) {
        .memberships-content {
            flex-direction: column;
            align-items: center;
            gap: 30px;
        }
    }


    @media (max-width: 380px) {
        .memberships-content {
            padding: 10px;
            padding-bottom: 40px;
        }
        .membership {
            width: 100%;
            max-width: 300px;
        }
    }

    @media screen and (max-width: 520px) {
        h1{
            font-size: 30px;
        }
        h2{
            font-size: 20px;
        }
        p{
            font-size: 16px;
        }
        .memberships-text{
            padding: 60px 20px 30px 20px;
        }
        .memberships-text p{
            width: 100%;
        }
    }
</style>